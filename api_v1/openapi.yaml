# ===============================================
# == 장바구니 관련 API
# ===============================================
/**
 * @swagger
 * /cart:
 *   get:
 *     summary: 내 장바구니 조회
 *     tags: [Cart]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: 내 장바구니 조회 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 오류
 */
 /**
 * @swagger
 * /cart/items/{itemId}:
 *   delete:
 *     summary: 장바구니 상품 삭제
 *     tags: [Cart]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: itemId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "삭제할 장바구니 아이템의 ID"
 *     responses:
 *       200:
 *         description: 상품 삭제 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       404:
 *         description: 해당 상품을 장바구니에서 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 # ===============================================
# == 팔로우 관련 API
# ===============================================
/**
 * @swagger
 * /sellers/{sellerId}/follow:
 *   post:
 *     summary: 특정 판매자 팔로우하기
 *     tags: [Follow]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "팔로우할 판매자의 ID"
 *     responses:
 *       200:
 *         description: 팔로우 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       409:
 *         description: 이미 팔로우한 판매자입니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /sellers/{sellerId}/follow:
 *   delete:
 *     summary: 특정 판매자 언팔로우하기
 *     tags: [Follow]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "언팔로우할 판매자의 ID"
 *     responses:
 *       200:
 *         description: 언팔로우 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /users/me/following:
 *   get:
 *     summary: 내가 팔로우하는 판매자 목록 보기
 *     tags: [Follow]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 팔로우 목록 조회 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 # ===============================================
# == 채팅 관련 API
# ===============================================
 /**
 * @swagger
 * /chats:
 *   get:
 *     summary: 내 채팅방 목록 조회
 *     tags: [Chat]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 채팅방 목록 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   roomId:
 *                     type: integer
 *                   partnerName:
 *                     type: string
 *                   lastMessage:
 *                     type: string
 *                   unreadCount:
 *                     type: integer
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 에러
 */
/**
 * @swagger
 * /chats:
 *   post:
 *     summary: 새로운 채팅 시작하기
 *     tags: [Chat]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               sellerId:
 *                 type: integer
 *                 description: "채팅을 시작할 상대방(판매자)의 ID"
 *               initialMessage:
 *                 type: string
 *                 description: "처음으로 보낼 메시지"
 *     responses:
 *       201:
 *         description: 채팅방 생성 및 메시지 전송 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 roomId:
 *                   type: integer
 *       401:
 *         description: 로그인이 필요합니다
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /chats/{roomId}/messages:
 *   get:
 *     summary: 과거 대화 내용 불러오기
 *     tags: [Chat]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: roomId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "메시지를 조회할 채팅방의 ID"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 과거 메시지 조회 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 해당 채팅방에 접근할 권한이 없습니다
 *       404:
 *         description: 해당 채팅방을 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
  # ===============================================
# == 상품 주문 관련 API
# ===============================================
/**
 * @swagger
 * /orders:
 *   post:
 *     summary: 주문 생성
 *     tags: [Order]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               cartItemIds:
 *                 type: array
 *                 items:
 *                   type: integer
 *                 description: "주문할 장바구니 아이템들의 ID 목록"
 *               shippingAddress:
 *                 type: string
 *                 description: "배송지 주소"
 *               recipientName:
 *                 type: string
 *                 description: "받는 사람 이름"
 *               paymentMethod:
 *                 type: string
 *                 description: "결제 수단 (예: CREDIT_CARD)"
 *     responses:
 *       201:
 *         description: 주문 생성 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 orderId:
 *                   type: integer
 *                 message:
 *                   type: string
 *                   example: "주문이 성공적으로 완료되었습니다."
 *       400:
 *         description: 주문 실패 (잘못된 요청)
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                   example: "주문 실패: 재고가 부족합니다."
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /orders:
 *   post:
 *     summary: 주문 생성 (바로 구매)
 *     tags: [Order]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               productId:
 *                 type: integer
 *               quantity:
 *                 type: integer
 *               selectedOption:
 *                 type: string
 *     responses:
 *       201:
 *         description: 주문 생성 성공
 *       401:
 *         description: 로그인이 필요합니다
 */
 /**
 * @swagger
 * /orders/non-member/lookup:
 *   get:
 *     summary: 비회원 주문 조회
 *     tags: [Order]
 *     parameters:
 *       - in: query
 *         name: orderNumber
 *         required: true
 *         schema:
 *           type: string
 *         description: "주문 시 발급받은 주문번호"
 *       - in: query
 *         name: name
 *         required: true
 *         schema:
 *           type: string
 *         description: "주문 시 입력한 주문자 이름"
 *       - in: query
 *         name: password
 *         required: true
 *         schema:
 *           type: string
 *         description: "주문 시 설정한 간이 비밀번호"
 *     responses:
 *       200:
 *         description: 비회원 주문 조회 성공
 *       404:
 *         description: 주문 정보를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
   # ===============================================
# == Q&A 관련 API
# ===============================================
/**
 * @swagger
 * /qna:
 *   post:
 *     summary: 새로운 1:1 문의 등록
 *     tags: [Q&A]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               title:
 *                 type: string
 *                 description: "문의 제목"
 *               content:
 *                 type: string
 *                 description: "문의 내용"
 *               isPublic:
 *                 type: boolean
 *                 description: "공개 여부 (true: 공개, false: 비공개)"
 *     responses:
 *       201:
 *         description: 문의 등록 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /qna:
 *   get:
 *     summary: 공개된 문의 목록 조회
 *     tags: [Q&A]
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 공개된 문의 목록 조회 성공
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /users/me/qna:
 *   get:
 *     summary: 나의 문의 내역 조회
 *     tags: [Q&A]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 나의 문의 내역 조회 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /qna/{qnaId}:
 *   get:
 *     summary: 특정 문의 상세 조회
 *     tags: [Q&A]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: qnaId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "조회할 문의의 ID"
 *     responses:
 *       200:
 *         description: 문의 상세 조회 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 이 문의를 조회할 권한이 없습니다
 *       404:
 *         description: 해당 문의를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /qna/{qnaId}:
 *   delete:
 *     summary: 문의 삭제
 *     tags: [Q&A]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: qnaId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "삭제할 문의의 ID"
 *     responses:
 *       200:
 *         description: 문의 삭제 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 이 문의를 삭제할 권한이 없습니다
 *       404:
 *         description: 해당 문의를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
   # ===============================================
# == 상품 리뷰 관련 API
# ===============================================
 /**
 * @swagger
 * /reviews/product/{productId}:
 *   get:
 *     summary: 상품 리뷰 목록 조회
 *     tags: [Review]
 *     parameters:
 *       - in: path
 *         name: productId
 *         required: true
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *         description: "가져올 리뷰 개수 (예: 3)"
 *     responses:
 *       200:
 *         description: 리뷰 목록 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   rating:
 *                     type: number
 *                   reviewTitle:
 *                     type: string
 *                   authorProfileUrl:
 *                     type: string
 *                   createdAt:
 *                     type: string
 *                     format: date
 *                   content:
 *                     type: string
 *       404:
 *         description: 상품을 찾을 수 없습니다
 */
 /**
 * @swagger
 * /products/{productId}/reviews:
 *   get:
 *     summary: 상품 리뷰 목록 조회
 *     tags: [Review]
 *     parameters:
 *       - in: path
 *         name: productId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "리뷰 목록을 조회할 상품의 ID"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 리뷰 목록 조회 성공
 *       404:
 *         description: 상품을 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /products/{productId}/reviews:
 *   post:
 *     summary: 상품 리뷰 작성 (이미지 포함)
 *     tags: [Review]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: productId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "리뷰를 작성할 상품의 ID"
 *     requestBody:
 *       required: true
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             properties:
 *               rating:
 *                 type: number
 *                 description: "별점 (1 ~ 5)"
 *               title:
 *                 type: string
 *                 description: "리뷰 제목"
 *               content:
 *                 type: string
 *                 description: "리뷰 본문 내용"
 *               images:
 *                 type: array
 *                 items:
 *                   type: string
 *                   format: binary
 *                 description: "업로드할 리뷰 이미지 (최대 3개)"
 *     responses:
 *       201:
 *         description: 리뷰 작성 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 이 상품을 구매한 사용자만 리뷰를 작성할 수 있습니다
 *       404:
 *         description: 상품을 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /reviews/{reviewId}:
 *   patch:
 *     summary: 리뷰 수정
 *     tags: [Review]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: reviewId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "수정할 리뷰의 ID"
 *     requestBody:
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             properties:
 *               rating:
 *                 type: number
 *                 description: "수정할 별점 (1 ~ 5)"
 *               title:
 *                 type: string
 *                 description: "수정할 리뷰 제목"
 *               content:
 *                 type: string
 *                 description: "수정할 리뷰 본문 내용"
 *               images:
 *                 type: array
 *                 items:
 *                   type: string
 *                   format: binary
 *                 description: "새로 등록할 리뷰 이미지"
 *     responses:
 *       200:
 *         description: 리뷰 수정 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 이 리뷰를 수정할 권한이 없습니다
 *       404:
 *         description: 해당 리뷰를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /reviews/{reviewId}:
 *   delete:
 *     summary: 리뷰 삭제
 *     tags: [Review]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: reviewId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "삭제할 리뷰의 ID"
 *     responses:
 *       200:
 *         description: 리뷰 삭제 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 이 리뷰를 삭제할 권한이 없습니다
 *       404:
 *         description: 해당 리뷰를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
    # ===============================================
# == 판매자 관련 API
# ===============================================
 /**
 * @swagger
 * /users/me:
 *   get:
 *     summary: 내 정보 조회 (판매자 정보 포함)
 *     tags: [Seller Profile]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: 내 정보 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 email:
 *                   type: string
 *                 name:
 *                   type: string
 *                 address:
 *                   type: string
 *                 profileImageUrl:
 *                   type: string
 *                   description: "프로필 사진 이미지 주소"
 *                 introduction:
 *                   type: string
 *                   description: "자기소개"
 *                 role:
 *                   type: string
 *                   enum: [SELLER]
 *                 # --- 판매자 스토어 정보 ---
 *                 storeName:
 *                   type: string
 *                   description: "스토어(상점) 이름"
 *                 storeHashtags:
 *                   type: array
 *                   items:
 *                     type: string
 *                   description: "스토어 대표 해시태그 목록"
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /users/me:
 *   patch:
 *     summary: 내 정보 수정 (판매자 정보 포함)
 *     tags: [Seller Profile]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *               address:
 *                 type: string
 *               profileImageUrl:
 *                 type: string
 *                 description: "새 프로필 사진 이미지 주소"
 *               introduction:
 *                 type: string
 *                 description: "새 자기소개"
 *               storeName:
 *                 type: string
 *                 description: "새 스토어 이름"
 *               storeHashtags:
 *                 type: array
 *                 items:
 *                   type: string
 *                 description: "새 스토어 해시태그 목록"
 *     responses:
 *       200:
 *         description: 내 정보 수정 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /sellers/me/products:
 *   get:
 *     summary: 내가 등록한 상품 목록 조회
 *     tags: [Seller Profile]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: search
 *         schema:
 *           type: string
 *         description: "검색할 상품명"
 *       - in: query
 *         name: startDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 시작일 (YYYY-MM-DD)"
 *       - in: query
 *         name: endDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 종료일 (YYYY-MM-DD)"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 상품 목록 조회 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 판매자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /users/{userId}/block:
 *   post:
 *     summary: 사용자 차단하기
 *     tags: [Communication]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "차단할 사용자의 ID"
 *     responses:
 *       200:
 *         description: 사용자 차단 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       404:
 *         description: 차단할 사용자를 찾을 수 없습니다
 *       409:
 *         description: 이미 차단한 사용자입니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /sellers:
 *   get:
 *     summary: 전체 판매자 목록 조회 (검색, 필터, 정렬)
 *     tags: [Seller]
 *     parameters:
 *       - in: query
 *         name: search
 *         schema:
 *           type: string
 *         description: "검색할 스토어 이름"
 *       - in: query
 *         name: category
 *         schema:
 *           type: string
 *         description: "특정 카테고리의 상품을 판매하는 판매자만 필터링"
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [name, followers, newest]
 *         description: "정렬 기준 (이름순, 팔로워순, 최신순)"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 판매자 목록 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   sellerId:
 *                     type: integer
 *                   storeName:
 *                     type: string
 *                   profileImageUrl:
 *                     type: string
 *                   followerCount:
 *                     type: integer
 *                   shortIntroduce:
 *                     type: string
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /sellers/{sellerId}:
 *   get:
 *     summary: 특정 판매자 프로필 조회
 *     tags: [Seller]
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "조회할 판매자의 ID"
 *     responses:
 *       200:
 *         description: 판매자 프로필 조회 성공
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /sellers/{sellerId}/products:
 *   get:
 *     summary: 특정 판매자의 상품 목록 조회
 *     tags: [Seller]
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "상품 목록을 조회할 판매자의 ID"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 상품 목록 조회 성공
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /sellers/{sellerId}/follow:
 *   post:
 *     summary: 특정 판매자 팔로우하기
 *     tags: [Seller]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "팔로우할 판매자의 ID"
 *     responses:
 *       200:
 *         description: 팔로우 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       409:
 *         description: 이미 팔로우한 판매자입니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /sellers/{sellerId}/follow:
 *   delete:
 *     summary: 특정 판매자 언팔로우하기
 *     tags: [Seller]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "언팔로우할 판매자의 ID"
 *     responses:
 *       200:
 *         description: 언팔로우 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
/**
 * @swagger
 * /sellers/{sellerId}/products:
 *   get:
 *     summary: 특정 판매자의 다른 상품 목록 조회
 *     tags: [Seller]
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *         description: "가져올 상품 개수 (예: 3)"
 *     responses:
 *       200:
 *         description: 상품 목록 조회 성공
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 */
     # ===============================================
# == 판매자 리뷰 관련 API
# ===============================================

/**
 * @swagger
 * /seller-reviews/{orderId}:
 *   post:
 *     summary: 판매자 리뷰 작성
 *     tags: [SellerReview]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: orderId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "리뷰를 작성할 대상 주문의 ID"
 *     requestBody:
 *       required: true
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             properties:
 *               content:
 *                 type: string
 *                 description: "판매자 리뷰 본문 내용"
 *               img:
 *                 type: string
 *                 format: binary
 *                 description: "업로드할 리뷰 이미지 (선택 사항)"
 *               rating:
 *                 type: number
 *                 minimum: 1
 *                 maximum: 5
 *                 description: "판매자에 대한 별점 (1 ~ 5)"
 *     responses:
 *       201:
 *         description: 판매자 리뷰 작성 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 이 주문에 대해 리뷰를 작성할 권한이 없습니다
 *       404:
 *         description: 해당 주문을 찾을 수 없습니다
 *       409:
 *         description: 이미 이 주문에 대한 판매자 리뷰를 작성했습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /seller-reviews/{sellerId}:
 *   get:
 *     summary: 특정 판매자에 대한 모든 리뷰 조회
 *     tags: [SellerReview]
 *     parameters:
 *       - in: path
 *         name: sellerId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "리뷰를 조회할 판매자의 ID"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 리뷰 목록 조회 성공
 *       404:
 *         description: 해당 판매자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /seller-reviews/{reviewId}:
 *   patch:
 *     summary: 판매자 리뷰 수정
 *     tags: [SellerReview]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: reviewId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "수정할 리뷰의 ID"
 *     requestBody:
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             properties:
 *               content:
 *                 type: string
 *               rating:
 *                 type: number
 *               img:
 *                 type: string
 *                 format: binary
 *     responses:
 *       200:
 *         description: 리뷰 수정 성공
 *       403:
 *         description: 이 리뷰를 수정할 권한이 없습니다
 * */
 /**
 * @swagger
 * /seller-reviews/{reviewId}:
 *   delete:
 *     summary: 판매자 리뷰 삭제
 *     tags: [SellerReview]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: reviewId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "삭제할 리뷰의 ID"
 *     responses:
 *       200:
 *         description: 리뷰 삭제 성공
 *       403:
 *         description: 이 리뷰를 삭제할 권한이 없습니다
 * */

 # ===============================================
# == 통계 관련 API
# ===============================================
/**
 * @swagger
 * /statistics/followers/summary:
 *   get:
 *     summary: 팔로워 요약 통계 조회 (파이 차트용)
 *     tags: [Statistics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: 팔로워 요약 통계 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 genderDistribution:
 *                   type: object
 *                   properties:
 *                     male:
 *                       type: integer
 *                     female:
 *                       type: integer
 *                     other:
 *                       type: integer
 *                 ageDistribution:
 *                   type: object
 *                   properties:
 *                     "10s":
 *                       type: integer
 *                     "20s":
 *                       type: integer
 *                     "30s":
 *                       type: integer
 *                     "40s_and_above":
 *                       type: integer
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 판매자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /statistics/followers/trend:
 *   get:
 *     summary: 팔로워 수 추이 통계 조회 (꺾은선 그래프용)
 *     tags: [Statistics]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: period
 *         schema:
 *           type: string
 *           enum: [daily, weekly, monthly]
 *         description: "집계 기간 단위 (일별/주별/월별)"
 *       - in: query
 *         name: startDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 시작일 (YYYY-MM-DD)"
 *       - in: query
 *         name: endDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 종료일 (YYYY-MM-DD)"
 *     responses:
 *       200:
 *         description: 팔로워 수 추이 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   date:
 *                     type: string
 *                     format: date
 *                   count:
 *                     type: integer
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 판매자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /statistics/sales/trend:
 *   get:
 *     summary: 판매 상품 통계 조회 (꺾은선 그래프용)
 *     tags: [Statistics]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: period
 *         schema:
 *           type: string
 *           enum: [daily, weekly, monthly]
 *         description: "집계 기간 단위 (일별/주별/월별)"
 *       - in: query
 *         name: startDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 시작일 (YYYY-MM-DD)"
 *       - in: query
 *         name: endDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 종료일 (YYYY-MM-DD)"
 *       - in: query
 *         name: productId
 *         schema:
 *           type: integer
 *         description: "특정 상품만 조회할 경우 상품 ID (선택 사항)"
 *     responses:
 *       200:
 *         description: 판매 통계 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   date:
 *                     type: string
 *                     format: date
 *                   salesCount:
 *                     type: integer
 *                     description: "판매 개수"
 *                   totalRevenue:
 *                     type: number
 *                     description: "총 판매액"
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 판매자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/statistics/users/summary:
 *   get:
 *     summary: 전체 이용자 수 통계 (관리자 전용)
 *     tags: [Admin, Statistics]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: 전체 이용자 수 통계 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 totalUsers:
 *                   type: integer
 *                   description: "총 이용자 수"
 *                 buyerCount:
 *                   type: integer
 *                   description: "구매자 수"
 *                 sellerCount:
 *                   type: integer
 *                   description: "판매자 수"
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/statistics/users/trend:
 *   get:
 *     summary: 가입자 수 추이 통계 (관리자 전용)
 *     tags: [Admin, Statistics]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: period
 *         schema:
 *           type: string
 *           enum: [daily, weekly, monthly]
 *         description: "집계 기간 단위 (일별/주별/월별)"
 *       - in: query
 *         name: startDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 시작일 (YYYY-MM-DD)"
 *       - in: query
 *         name: endDate
 *         schema:
 *           type: string
 *           format: date
 *         description: "조회 종료일 (YYYY-MM-DD)"
 *     responses:
 *       200:
 *         description: 가입자 수 추이 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   date:
 *                     type: string
 *                     format: date
 *                   signupCount:
 *                     type: integer
 *                     description: "해당 기간의 신규 가입자 수"
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 # ===============================================
# == 관리자 관련 API
# ===============================================
/**
 * @swagger
 * /admin/seller-applications:
 *   get:
 *     summary: 판매자격 신청 목록 조회 (관리자 전용)
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 신청 목록 조회 성공
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   applicationId:
 *                     type: integer
 *                   userId:
 *                     type: integer
 *                   username:
 *                     type: string
 *                   storeName:
 *                     type: string
 *                   applicationDate:
 *                     type: string
 *                     format: date
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/seller-applications/{applicationId}/approve:
 *   patch:
 *     summary: 판매자 자격 승인 (관리자 전용)
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: applicationId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "승인할 신청의 ID"
 *     responses:
 *       200:
 *         description: 판매자 자격 승인 성공
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       404:
 *         description: 해당 신청을 찾을 수 없습니다
 *       409:
 *         description: 이미 처리된 신청입니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/users:
 *   get:
 *     summary: 전체 사용자 목록 조회 (관리자 전용)
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: search
 *         schema:
 *           type: string
 *         description: "검색할 사용자 이름 또는 이메일"
 *       - in: query
 *         name: role
 *         schema:
 *           type: string
 *           enum: [BUYER, SELLER]
 *         description: "특정 역할의 사용자만 필터링 (선택 사항)"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 사용자 목록 조회 성공
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/users/{userId}:
 *   patch:
 *     summary: 사용자 정보 강제 수정 (관리자 전용)
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "수정할 사용자의 ID"
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *               address:
 *                 type: string
 *               role:
 *                 type: string
 *                 enum: [BUYER, SELLER]
 *                 description: "사용자 역할 강제 변경"
 *     responses:
 *       200:
 *         description: 사용자 정보 수정 성공
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       404:
 *         description: 해당 사용자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/users/{userId}:
 *   delete:
 *     summary: 사용자 계정 강제 삭제 (관리자 전용)
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "삭제할 사용자의 ID"
 *     responses:
 *       200:
 *         description: 사용자 계정 삭제 성공
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       404:
 *         description: 해당 사용자를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/orders:
 *   get:
 *     summary: 전체 주문 내역 검색/조회 (관리자 전용)
 *     tags: [Admin, Order]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: orderNumber
 *         schema:
 *           type: string
 *         description: "검색할 주문번호"
 *       - in: query
 *         name: buyerId
 *         schema:
 *           type: integer
 *         description: "특정 구매자의 주문만 필터링"
 *       - in: query
 *         name: sellerId
 *         schema:
 *           type: integer
 *         description: "특정 판매자의 주문만 필터링"
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *     responses:
 *       200:
 *         description: 주문 내역 조회 성공
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/orders/{orderId}:
 *   patch:
 *     summary: 주문 정보 수정 (관리자 전용)
 *     tags: [Admin, Order]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: orderId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "수정할 주문의 ID"
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               orderStatus:
 *                 type: string
 *                 description: "변경할 주문 상태 (예: 배송중, 배송완료, 주문취소)"
 *               adminMemo:
 *                 type: string
 *                 description: "관리자 특이사항 메모"
 *     responses:
 *       200:
 *         description: 주문 정보 수정 성공
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       404:
 *         description: 해당 주문을 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/orders/{orderId}:
 *   delete:
 *     summary: 주문 내역 삭제 (관리자 전용)
 *     tags: [Admin, Order]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: orderId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "삭제할 주문의 ID"
 *     responses:
 *       200:
 *         description: 주문 내역 삭제 성공
 *       401:
 *         description: 관리자 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       404:
 *         description: 해당 주문을 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */
 /**
 * @swagger
 * /admin/qna/{qnaId}:
 *   patch:
 *     summary: 문의에 답변 등록 (관리자 전용)
 *     tags: [Q&A, Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: qnaId
 *         required: true
 *         schema:
 *           type: integer
 *         description: "답변을 등록할 문의의 ID"
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               answer:
 *                 type: string
 *                 description: "관리자의 답변 내용"
 *     responses:
 *       200:
 *         description: 답변 등록 성공
 *       401:
 *         description: 로그인이 필요합니다
 *       403:
 *         description: 관리자 권한이 필요합니다
 *       404:
 *         description: 해당 문의를 찾을 수 없습니다
 *       500:
 *         description: 서버 에러
 */